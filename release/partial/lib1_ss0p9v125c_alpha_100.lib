library (lib1_ss0p9v125c_alpha_100) {
  revision : "1.0";
  delay_model : table_lookup;
  capacitive_load_unit (1,pf);
  current_unit : "1mA";
  leakage_power_unit : "1pW";
  pulling_resistance_unit : "1kohm";
  time_unit : "1ns";
  voltage_unit : "1V";
  voltage_map (VDD, 0.9);
  voltage_map (VSS, 0);
  voltage_map (GND, 0);
  default_cell_leakage_power : 0;
  default_fanout_load : 1;
  default_max_transition : 0.75;
  default_output_pin_cap : 0;
  in_place_swap_mode : match_footprint;
  input_threshold_pct_fall : 50;
  input_threshold_pct_rise : 50;
  nom_process : 1;
  nom_temperature : 125;
  nom_voltage : 0.9;
  output_threshold_pct_fall : 50;
  output_threshold_pct_rise : 50;
  slew_derate_from_library : 0.5;
  slew_lower_threshold_pct_fall : 30;
  slew_lower_threshold_pct_rise : 30;
  slew_upper_threshold_pct_fall : 70;
  slew_upper_threshold_pct_rise : 70;
  operating_conditions (ss0p9v125c) {
    process : 1;
    temperature : 125;
    voltage : 0.9;
  }
  default_operating_conditions : ss0p9v125c;
  lu_table_template (delay_template_generic_7x7) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
    index_2 ("0.001, 0.00250018, 0.00776614, 0.0178223, 0.0334892, 0.0554717, 0.0843977");
  }
  power_lut_template (power_template_generic_7x7) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
    index_2 ("0.001, 0.00250018, 0.00776614, 0.0178223, 0.0334892, 0.0554717, 0.0843977");
  }
  cell (AN2AM16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A&B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.112104;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000931293;
      rise_capacitance : 0.000923941;
      fall_capacitance : 0.000931293;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00116264;
      rise_capacitance : 0.00116264;
      fall_capacitance : 0.00115127;
    }
  }
  cell (AN2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A&B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.115718;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00164357;
      rise_capacitance : 0.00163791;
      fall_capacitance : 0.00164357;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00179839;
      rise_capacitance : 0.00179839;
      fall_capacitance : 0.00175293;
    }
  }
  cell (AN3M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A&B&C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.114327;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00157992;
      rise_capacitance : 0.0015695;
      fall_capacitance : 0.00157992;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00169346;
      rise_capacitance : 0.00167842;
      fall_capacitance : 0.00169346;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00174815;
      rise_capacitance : 0.00174815;
      fall_capacitance : 0.00171741;
    }
  }
  cell (AN4M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A&B&C&D)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.111807;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0014858;
      rise_capacitance : 0.00148155;
      fall_capacitance : 0.0014858;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00160324;
      rise_capacitance : 0.00158157;
      fall_capacitance : 0.00160324;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00167781;
      rise_capacitance : 0.00165229;
      fall_capacitance : 0.00167781;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00169998;
      rise_capacitance : 0.00169998;
      fall_capacitance : 0.00168231;
    }
  }
  cell (AO211M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2)|B|C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.012693;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000436685;
      rise_capacitance : 0.000436685;
      fall_capacitance : 0.000432792;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000461736;
      rise_capacitance : 0.000461736;
      fall_capacitance : 0.000456636;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000458154;
      rise_capacitance : 0.000458154;
      fall_capacitance : 0.000449455;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000458375;
      rise_capacitance : 0.000458375;
      fall_capacitance : 0.000451942;
    }
  }
  cell (AO21M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2)|B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00595682;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000390204;
      rise_capacitance : 0.000390204;
      fall_capacitance : 0.000386764;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000406053;
      rise_capacitance : 0.000406053;
      fall_capacitance : 0.000400683;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000476034;
      rise_capacitance : 0.000476034;
      fall_capacitance : 0.000461901;
    }
  }
  cell (AO221M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2)|(B1&B2)|C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0132756;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&!A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000412138;
      rise_capacitance : 0.000412138;
      fall_capacitance : 0.000408356;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00042433;
      rise_capacitance : 0.00042433;
      fall_capacitance : 0.000418664;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000412449;
      rise_capacitance : 0.000412449;
      fall_capacitance : 0.0004087;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000429417;
      rise_capacitance : 0.000429417;
      fall_capacitance : 0.000424619;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000501049;
      rise_capacitance : 0.000501049;
      fall_capacitance : 0.000491633;
    }
  }
  cell (AO222M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2)|(B1&B2)|(C1&C2))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0126448;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&!A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&!A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&!A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&!A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000418763;
      rise_capacitance : 0.000418763;
      fall_capacitance : 0.000410769;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000449571;
      rise_capacitance : 0.000449571;
      fall_capacitance : 0.000439644;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000403305;
      rise_capacitance : 0.000403305;
      fall_capacitance : 0.000398209;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000441141;
      rise_capacitance : 0.000441141;
      fall_capacitance : 0.000435789;
    }
    pin (C1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000410295;
      rise_capacitance : 0.000407105;
      fall_capacitance : 0.000410295;
    }
    pin (C2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000449353;
      rise_capacitance : 0.000449353;
      fall_capacitance : 0.000448002;
    }
  }
  cell (AO22M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2)|(B1&B2))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00581923;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000464493;
      rise_capacitance : 0.000464493;
      fall_capacitance : 0.00045865;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000471238;
      rise_capacitance : 0.000471238;
      fall_capacitance : 0.000462018;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000431397;
      rise_capacitance : 0.000426187;
      fall_capacitance : 0.000431397;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00041721;
      rise_capacitance : 0.000415217;
      fall_capacitance : 0.00041721;
    }
  }
  cell (AO31M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2&A3)|B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0128935;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000483131;
      rise_capacitance : 0.000480038;
      fall_capacitance : 0.000483131;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000448583;
      rise_capacitance : 0.000444435;
      fall_capacitance : 0.000448583;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000531023;
      rise_capacitance : 0.000529779;
      fall_capacitance : 0.000531023;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000546541;
      rise_capacitance : 0.000546541;
      fall_capacitance : 0.000523817;
    }
  }
  cell (AO32M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2&A3)|(B1&B2))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0128035;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000480214;
      rise_capacitance : 0.000476496;
      fall_capacitance : 0.000480214;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000455685;
      rise_capacitance : 0.000452001;
      fall_capacitance : 0.000455685;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000514169;
      rise_capacitance : 0.000513587;
      fall_capacitance : 0.000514169;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000513606;
      rise_capacitance : 0.000513606;
      fall_capacitance : 0.000507792;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00050975;
      rise_capacitance : 0.00050975;
      fall_capacitance : 0.000500836;
    }
  }
  cell (AO33M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2&A3)|(B1&B2&B3))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0124608;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000512219;
      rise_capacitance : 0.000512219;
      fall_capacitance : 0.000511378;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000479977;
      rise_capacitance : 0.000479908;
      fall_capacitance : 0.000479977;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000456015;
      rise_capacitance : 0.000456015;
      fall_capacitance : 0.00045198;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000493765;
      rise_capacitance : 0.000489264;
      fall_capacitance : 0.000493765;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000461302;
      rise_capacitance : 0.000456614;
      fall_capacitance : 0.000461302;
    }
    pin (B3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000495341;
      rise_capacitance : 0.000494581;
      fall_capacitance : 0.000495341;
    }
  }
  cell (AOI211M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1&A2)|B|C))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00262334;
      timing () {
        related_pin : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00050451;
      rise_capacitance : 0.000501629;
      fall_capacitance : 0.00050451;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00050405;
      rise_capacitance : 0.000502617;
      fall_capacitance : 0.00050405;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000462752;
      rise_capacitance : 0.000462752;
      fall_capacitance : 0.00045251;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00045682;
      rise_capacitance : 0.00045682;
      fall_capacitance : 0.000438457;
    }
  }
  cell (AOI21M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1&A2)|B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.042833;
      timing () {
        related_pin : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0037845;
      rise_capacitance : 0.00373732;
      fall_capacitance : 0.0037845;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0039944;
      rise_capacitance : 0.00397214;
      fall_capacitance : 0.0039944;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00359312;
      rise_capacitance : 0.00359312;
      fall_capacitance : 0.00341385;
    }
  }
  cell (AOI31M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1&A2&A3)|B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00213524;
      timing () {
        related_pin : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000401516;
      rise_capacitance : 0.000398732;
      fall_capacitance : 0.000401516;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00038219;
      rise_capacitance : 0.000378452;
      fall_capacitance : 0.00038219;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00038049;
      rise_capacitance : 0.000380126;
      fall_capacitance : 0.00038049;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000498068;
      rise_capacitance : 0.000498068;
      fall_capacitance : 0.000470154;
    }
  }
  cell (AOI32M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1&A2&A3)|(B1&B2)))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00193183;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000381971;
      rise_capacitance : 0.000378355;
      fall_capacitance : 0.000381971;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000351458;
      rise_capacitance : 0.000346719;
      fall_capacitance : 0.000351458;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000354924;
      rise_capacitance : 0.00035475;
      fall_capacitance : 0.000354924;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000408131;
      rise_capacitance : 0.000408131;
      fall_capacitance : 0.000401453;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000428484;
      rise_capacitance : 0.000428484;
      fall_capacitance : 0.00041607;
    }
  }
  cell (AOI33M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1&A2&A3)|(B1&B2&B3)))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00369446;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000473632;
      rise_capacitance : 0.000473632;
      fall_capacitance : 0.000470695;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000475087;
      rise_capacitance : 0.000475087;
      fall_capacitance : 0.00047344;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000502884;
      rise_capacitance : 0.000502884;
      fall_capacitance : 0.000495179;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000478378;
      rise_capacitance : 0.0004724;
      fall_capacitance : 0.000478378;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000453977;
      rise_capacitance : 0.000447171;
      fall_capacitance : 0.000453977;
    }
    pin (B3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00046617;
      rise_capacitance : 0.00046617;
      fall_capacitance : 0.000465825;
    }
  }
  cell (BUFM12) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "A";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0869051;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00254528, 0.00796957, 0.018328, 0.034466, 0.0571094, 0.0869051");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00254528, 0.00796957, 0.018328, 0.034466, 0.0571094, 0.0869051");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00254528, 0.00796957, 0.018328, 0.034466, 0.0571094, 0.0869051");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00254528, 0.00796957, 0.018328, 0.034466, 0.0571094, 0.0869051");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00254528, 0.00796957, 0.018328, 0.034466, 0.0571094, 0.0869051");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00254528, 0.00796957, 0.018328, 0.034466, 0.0571094, 0.0869051");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00118368;
      rise_capacitance : 0.00118368;
      fall_capacitance : 0.00115744;
    }
  }
  cell (CKAN2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A&B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0736243;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00134733;
      rise_capacitance : 0.00132508;
      fall_capacitance : 0.00134733;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00134862;
      rise_capacitance : 0.00134862;
      fall_capacitance : 0.00132484;
    }
  }
  cell (CKBUFM16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "A";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.074782;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00232721, 0.00698601, 0.0158827, 0.0297432, 0.0491911, 0.074782");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00232721, 0.00698601, 0.0158827, 0.0297432, 0.0491911, 0.074782");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00232721, 0.00698601, 0.0158827, 0.0297432, 0.0491911, 0.074782");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00232721, 0.00698601, 0.0158827, 0.0297432, 0.0491911, 0.074782");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00232721, 0.00698601, 0.0158827, 0.0297432, 0.0491911, 0.074782");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00232721, 0.00698601, 0.0158827, 0.0297432, 0.0491911, 0.074782");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00147594;
      rise_capacitance : 0.00147461;
      fall_capacitance : 0.00147594;
    }
  }
  cell (CKINVM16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!A)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.106894;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0029341, 0.00972321, 0.022688, 0.0428865, 0.0712273, 0.10852");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0029341, 0.00972321, 0.022688, 0.0428865, 0.0712273, 0.10852");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0029341, 0.00972321, 0.022688, 0.0428865, 0.0712273, 0.10852");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0029341, 0.00972321, 0.022688, 0.0428865, 0.0712273, 0.10852");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0029341, 0.00972321, 0.022688, 0.0428865, 0.0712273, 0.10852");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0029341, 0.00972321, 0.022688, 0.0428865, 0.0712273, 0.10852");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00414379;
      rise_capacitance : 0.00414379;
      fall_capacitance : 0.0040936;
    }
  }
  cell (CKMUX2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((S&B)|((!S)&A))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0692275;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0013366;
      rise_capacitance : 0.00133562;
      fall_capacitance : 0.0013366;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00125561;
      rise_capacitance : 0.00125407;
      fall_capacitance : 0.00125561;
    }
    pin (S) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00116095;
      rise_capacitance : 0.00116095;
      fall_capacitance : 0.00116027;
    }
  }
  cell (CKND2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A&B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0510451;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00368948;
      rise_capacitance : 0.0036309;
      fall_capacitance : 0.00368948;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00387251;
      rise_capacitance : 0.00387251;
      fall_capacitance : 0.00378712;
    }
  }
  cell (CKXOR2M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A^B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00908793;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00112261;
      rise_capacitance : 0.00112261;
      fall_capacitance : 0.00111434;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000644447;
      rise_capacitance : 0.000644447;
      fall_capacitance : 0.000643438;
    }
  }
  cell (DFCQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0130731;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121717, 0.0019795, 0.00343528, 0.00570331, 0.00888562, 0.0130731");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121717, 0.0019795, 0.00343528, 0.00570331, 0.00888562, 0.0130731");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121717, 0.0019795, 0.00343528, 0.00570331, 0.00888562, 0.0130731");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121717, 0.0019795, 0.00343528, 0.00570331, 0.00888562, 0.0130731");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121717, 0.0019795, 0.00343528, 0.00570331, 0.00888562, 0.0130731");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121717, 0.0019795, 0.00343528, 0.00570331, 0.00888562, 0.0130731");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000534405;
      rise_capacitance : 0.000534405;
      fall_capacitance : 0.000517754;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000427816;
      rise_capacitance : 0.000427816;
      fall_capacitance : 0.000414553;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "D";
    }
  }
  cell (DFCQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131403;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000521023;
      rise_capacitance : 0.000521023;
      fall_capacitance : 0.000504487;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000434258;
      rise_capacitance : 0.000434258;
      fall_capacitance : 0.000422923;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00115646;
      rise_capacitance : 0.00113793;
      fall_capacitance : 0.00115646;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "D";
    }
  }
  cell (DFCQRSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0130858;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000521994;
      rise_capacitance : 0.000521994;
      fall_capacitance : 0.000505803;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000343183;
      rise_capacitance : 0.000343183;
      fall_capacitance : 0.000336185;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00117203;
      rise_capacitance : 0.00117203;
      fall_capacitance : 0.00115975;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00113994;
      rise_capacitance : 0.00112021;
      fall_capacitance : 0.00113994;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "D";
    }
  }
  cell (DFCQSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0134048;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000507467;
      rise_capacitance : 0.000507467;
      fall_capacitance : 0.000491175;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000457149;
      rise_capacitance : 0.000457149;
      fall_capacitance : 0.000449755;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00108648;
      rise_capacitance : 0.00104732;
      fall_capacitance : 0.00108648;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "D";
    }
  }
  cell (DFEQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0132849;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199669, 0.003478, 0.00578582, 0.00902395, 0.0132849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199669, 0.003478, 0.00578582, 0.00902395, 0.0132849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199669, 0.003478, 0.00578582, 0.00902395, 0.0132849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199669, 0.003478, 0.00578582, 0.00902395, 0.0132849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199669, 0.003478, 0.00578582, 0.00902395, 0.0132849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199669, 0.003478, 0.00578582, 0.00902395, 0.0132849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000864354;
      rise_capacitance : 0.000864354;
      fall_capacitance : 0.00084454;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000601564;
      rise_capacitance : 0.000601564;
      fall_capacitance : 0.000592298;
    }
    pin (E) {
      direction : "input";
      nextstate_type : "load";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00126435;
      rise_capacitance : 0.00126435;
      fall_capacitance : 0.00124354;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((D&E)|(IQ&(!E)))";
    }
  }
  cell (DFEQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0133869;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000838902;
      rise_capacitance : 0.000838902;
      fall_capacitance : 0.00081619;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000553395;
      rise_capacitance : 0.000553395;
      fall_capacitance : 0.000546917;
    }
    pin (E) {
      direction : "input";
      nextstate_type : "load";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00139913;
      rise_capacitance : 0.00139913;
      fall_capacitance : 0.0013883;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00115028;
      rise_capacitance : 0.00113841;
      fall_capacitance : 0.00115028;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((D&E)|(IQ&(!E)))";
    }
  }
  cell (DFEQZRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0128184;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121259, 0.00195884, 0.0033839, 0.00560409, 0.00871926, 0.0128184");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121259, 0.00195884, 0.0033839, 0.00560409, 0.00871926, 0.0128184");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121259, 0.00195884, 0.0033839, 0.00560409, 0.00871926, 0.0128184");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121259, 0.00195884, 0.0033839, 0.00560409, 0.00871926, 0.0128184");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121259, 0.00195884, 0.0033839, 0.00560409, 0.00871926, 0.0128184");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121259, 0.00195884, 0.0033839, 0.00560409, 0.00871926, 0.0128184");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000617964;
      rise_capacitance : 0.000617964;
      fall_capacitance : 0.000602946;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000458381;
      rise_capacitance : 0.000458381;
      fall_capacitance : 0.000458022;
    }
    pin (E) {
      direction : "input";
      nextstate_type : "load";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00133089;
      rise_capacitance : 0.00133089;
      fall_capacitance : 0.00130056;
    }
    pin (RB) {
      direction : "input";
      nextstate_type : "clear";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000625971;
      rise_capacitance : 0.000625971;
      fall_capacitance : 0.000622488;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "(RB&((D&E)|(IQ&(!E))))";
    }
  }
  cell (DFMQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0126811;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121012, 0.0019477, 0.00335621, 0.0055506, 0.00862958, 0.0126811");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121012, 0.0019477, 0.00335621, 0.0055506, 0.00862958, 0.0126811");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121012, 0.0019477, 0.00335621, 0.0055506, 0.00862958, 0.0126811");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121012, 0.0019477, 0.00335621, 0.0055506, 0.00862958, 0.0126811");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121012, 0.0019477, 0.00335621, 0.0055506, 0.00862958, 0.0126811");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121012, 0.0019477, 0.00335621, 0.0055506, 0.00862958, 0.0126811");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000608723;
      rise_capacitance : 0.000608723;
      fall_capacitance : 0.00059275;
    }
    pin (D1) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000475159;
      rise_capacitance : 0.000475159;
      fall_capacitance : 0.000474969;
    }
    pin (D2) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000937784;
      rise_capacitance : 0.000937784;
      fall_capacitance : 0.000925004;
    }
    pin (S) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00122852;
      rise_capacitance : 0.00122852;
      fall_capacitance : 0.00120522;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((D1&S)|(D2&(!S)))";
    }
  }
  cell (DFQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131638;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121881, 0.00198686, 0.00345358, 0.00573864, 0.00894486, 0.0131638");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121881, 0.00198686, 0.00345358, 0.00573864, 0.00894486, 0.0131638");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121881, 0.00198686, 0.00345358, 0.00573864, 0.00894486, 0.0131638");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121881, 0.00198686, 0.00345358, 0.00573864, 0.00894486, 0.0131638");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121881, 0.00198686, 0.00345358, 0.00573864, 0.00894486, 0.0131638");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121881, 0.00198686, 0.00345358, 0.00573864, 0.00894486, 0.0131638");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000530899;
      rise_capacitance : 0.000530899;
      fall_capacitance : 0.000519671;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000498723;
      rise_capacitance : 0.000498723;
      fall_capacitance : 0.000492288;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "D";
    }
  }
  cell (DFQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0132845;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00051655;
      rise_capacitance : 0.00051655;
      fall_capacitance : 0.000501973;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000500103;
      rise_capacitance : 0.000500103;
      fall_capacitance : 0.000497103;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00115906;
      rise_capacitance : 0.00114043;
      fall_capacitance : 0.00115906;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "D";
    }
  }
  cell (DFQRSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131609;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000515866;
      rise_capacitance : 0.000515866;
      fall_capacitance : 0.000501486;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000502917;
      rise_capacitance : 0.000502917;
      fall_capacitance : 0.000498174;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00124542;
      rise_capacitance : 0.00124542;
      fall_capacitance : 0.00123196;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00128613;
      rise_capacitance : 0.0012587;
      fall_capacitance : 0.00128613;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "D";
    }
  }
  cell (DFQSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0133622;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000514162;
      rise_capacitance : 0.000514162;
      fall_capacitance : 0.000499022;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000464511;
      rise_capacitance : 0.000464511;
      fall_capacitance : 0.000458275;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00105532;
      rise_capacitance : 0.00101788;
      fall_capacitance : 0.00105532;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "D";
    }
  }
  cell (DFQZRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0130293;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121639, 0.00197595, 0.00342645, 0.00568625, 0.00885701, 0.0130293");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121639, 0.00197595, 0.00342645, 0.00568625, 0.00885701, 0.0130293");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121639, 0.00197595, 0.00342645, 0.00568625, 0.00885701, 0.0130293");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121639, 0.00197595, 0.00342645, 0.00568625, 0.00885701, 0.0130293");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121639, 0.00197595, 0.00342645, 0.00568625, 0.00885701, 0.0130293");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121639, 0.00197595, 0.00342645, 0.00568625, 0.00885701, 0.0130293");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000555985;
      rise_capacitance : 0.000555985;
      fall_capacitance : 0.000541108;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00047316;
      rise_capacitance : 0.000468851;
      fall_capacitance : 0.00047316;
    }
    pin (RB) {
      direction : "input";
      nextstate_type : "clear";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000473737;
      rise_capacitance : 0.000472549;
      fall_capacitance : 0.000473737;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "(RB&D)";
    }
  }
  cell (DFQZRSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0122797;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012029, 0.00191513, 0.00327524, 0.00539422, 0.0083674, 0.0122797");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012029, 0.00191513, 0.00327524, 0.00539422, 0.0083674, 0.0122797");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012029, 0.00191513, 0.00327524, 0.00539422, 0.0083674, 0.0122797");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012029, 0.00191513, 0.00327524, 0.00539422, 0.0083674, 0.0122797");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012029, 0.00191513, 0.00327524, 0.00539422, 0.0083674, 0.0122797");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012029, 0.00191513, 0.00327524, 0.00539422, 0.0083674, 0.0122797");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000662514;
      rise_capacitance : 0.000662514;
      fall_capacitance : 0.000649549;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000408876;
      rise_capacitance : 0.000408876;
      fall_capacitance : 0.000407859;
    }
    pin (RB) {
      direction : "input";
      nextstate_type : "clear";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000498917;
      rise_capacitance : 0.000497827;
      fall_capacitance : 0.000498917;
    }
    pin (SB) {
      direction : "input";
      nextstate_type : "preset";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000523743;
      rise_capacitance : 0.000523743;
      fall_capacitance : 0.000512116;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "(RB&(!(SB&(!D))))";
    }
  }
  cell (DFQZSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0133322;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122183, 0.00200052, 0.00348754, 0.00580425, 0.00905485, 0.0133322");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122183, 0.00200052, 0.00348754, 0.00580425, 0.00905485, 0.0133322");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122183, 0.00200052, 0.00348754, 0.00580425, 0.00905485, 0.0133322");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122183, 0.00200052, 0.00348754, 0.00580425, 0.00905485, 0.0133322");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122183, 0.00200052, 0.00348754, 0.00580425, 0.00905485, 0.0133322");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122183, 0.00200052, 0.00348754, 0.00580425, 0.00905485, 0.0133322");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000560945;
      rise_capacitance : 0.000560945;
      fall_capacitance : 0.000545744;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000674411;
      rise_capacitance : 0.000674411;
      fall_capacitance : 0.000652682;
    }
    pin (SB) {
      direction : "input";
      nextstate_type : "preset";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000533945;
      rise_capacitance : 0.000533945;
      fall_capacitance : 0.000521841;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "(!(SB&(!D)))";
    }
  }
  cell (INVM12) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!A)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.08017;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00255674, 0.00802122, 0.0184564, 0.034714, 0.0575252, 0.0875417");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00255674, 0.00802122, 0.0184564, 0.034714, 0.0575252, 0.0875417");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00255674, 0.00802122, 0.0184564, 0.034714, 0.0575252, 0.0875417");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00255674, 0.00802122, 0.0184564, 0.034714, 0.0575252, 0.0875417");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00255674, 0.00802122, 0.0184564, 0.034714, 0.0575252, 0.0875417");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00255674, 0.00802122, 0.0184564, 0.034714, 0.0575252, 0.0875417");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00340997;
      rise_capacitance : 0.00340997;
      fall_capacitance : 0.00331944;
    }
  }
  cell (LACM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0130735;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "GB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "GB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (QB) {
      direction : "output";
      function : "IQN";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0129715;
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "GB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "GB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000434482;
      rise_capacitance : 0.000434482;
      fall_capacitance : 0.000432796;
    }
    pin (GB) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000529568;
      rise_capacitance : 0.000529568;
      fall_capacitance : 0.000515155;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LACQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.013086;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "GB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "GB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000430591;
      rise_capacitance : 0.000430591;
      fall_capacitance : 0.000429192;
    }
    pin (GB) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00052975;
      rise_capacitance : 0.00052975;
      fall_capacitance : 0.00051499;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LAM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131867;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (QB) {
      direction : "output";
      function : "IQN";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0126644;
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00046676;
      rise_capacitance : 0.00046676;
      fall_capacitance : 0.000464129;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000528726;
      rise_capacitance : 0.000528726;
      fall_capacitance : 0.000515078;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LAQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131789;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000462471;
      rise_capacitance : 0.000462471;
      fall_capacitance : 0.00046059;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000528885;
      rise_capacitance : 0.000528885;
      fall_capacitance : 0.000515157;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LAQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.013381;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000613047;
      rise_capacitance : 0.000609815;
      fall_capacitance : 0.000613047;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00113067;
      rise_capacitance : 0.00113067;
      fall_capacitance : 0.00111097;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000856597;
      rise_capacitance : 0.000856597;
      fall_capacitance : 0.000853828;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LAQSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0132659;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000378584;
      rise_capacitance : 0.000378584;
      fall_capacitance : 0.000377242;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000998446;
      rise_capacitance : 0.000998446;
      fall_capacitance : 0.000972443;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000462395;
      rise_capacitance : 0.000462395;
      fall_capacitance : 0.000458274;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LARM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0126341;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (QB) {
      direction : "output";
      function : "IQN";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0138657;
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : negative_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000624982;
      rise_capacitance : 0.000622394;
      fall_capacitance : 0.000624982;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00113487;
      rise_capacitance : 0.00113487;
      fall_capacitance : 0.00111272;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000865191;
      rise_capacitance : 0.000865191;
      fall_capacitance : 0.000861049;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LARSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0128689;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (QB) {
      direction : "output";
      function : "IQN";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0139718;
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : negative_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000572874;
      rise_capacitance : 0.000570478;
      fall_capacitance : 0.000572874;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0011246;
      rise_capacitance : 0.0011246;
      fall_capacitance : 0.00110215;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000876233;
      rise_capacitance : 0.000874266;
      fall_capacitance : 0.000876233;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000488824;
      rise_capacitance : 0.000484168;
      fall_capacitance : 0.000488824;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LASM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.012673;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (QB) {
      direction : "output";
      function : "IQN";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0130444;
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000384164;
      rise_capacitance : 0.000384164;
      fall_capacitance : 0.000382784;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000987027;
      rise_capacitance : 0.000987027;
      fall_capacitance : 0.000953538;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000498854;
      rise_capacitance : 0.000498854;
      fall_capacitance : 0.000497491;
    }
    latch (IQ,IQN) {
    }
  }
  cell (MUX2M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((S&B)|((!S)&A))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00611575;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000563964;
      rise_capacitance : 0.000563964;
      fall_capacitance : 0.000553581;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000608311;
      rise_capacitance : 0.000608311;
      fall_capacitance : 0.000599618;
    }
    pin (S) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00100591;
      rise_capacitance : 0.00100591;
      fall_capacitance : 0.000987247;
    }
  }
  cell (MUX3M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((S1&C)|((!S1)&((S0&B)|((!S0)&A))))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0119981;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000478246;
      rise_capacitance : 0.000478246;
      fall_capacitance : 0.000463935;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000823328;
      rise_capacitance : 0.000820992;
      fall_capacitance : 0.000823328;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00084678;
      rise_capacitance : 0.00084678;
      fall_capacitance : 0.000825942;
    }
    pin (S0) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00117034;
      rise_capacitance : 0.00117034;
      fall_capacitance : 0.00113717;
    }
    pin (S1) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00142814;
      rise_capacitance : 0.00142814;
      fall_capacitance : 0.00139156;
    }
  }
  cell (MUX4M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((S1&((S0&D)|((!S0)&C)))|((!S1)&((S0&B)|((!S0)&A))))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0126906;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b1 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b0 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&!C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&!C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&!C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&!C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&!B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&!B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&!C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&!C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000528191;
      rise_capacitance : 0.000528191;
      fall_capacitance : 0.000521383;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000708729;
      rise_capacitance : 0.000708729;
      fall_capacitance : 0.000698939;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000743986;
      rise_capacitance : 0.000743986;
      fall_capacitance : 0.00073518;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000862242;
      rise_capacitance : 0.000862242;
      fall_capacitance : 0.00085291;
    }
    pin (S0) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00243536;
      rise_capacitance : 0.00243536;
      fall_capacitance : 0.00238784;
    }
    pin (S1) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00135435;
      rise_capacitance : 0.00135435;
      fall_capacitance : 0.00131853;
    }
  }
  cell (MXB2M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((S&B)|((!S)&A)))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00932364;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000489898;
      rise_capacitance : 0.000489898;
      fall_capacitance : 0.000482809;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00106331;
      rise_capacitance : 0.00106331;
      fall_capacitance : 0.00104297;
    }
    pin (S) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00116936;
      rise_capacitance : 0.00116936;
      fall_capacitance : 0.00114807;
    }
  }
  cell (MXB3M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((S1&C)|((!S1)&((S0&B)|((!S0)&A)))))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131202;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000599921;
      rise_capacitance : 0.000599921;
      fall_capacitance : 0.000594041;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000726332;
      rise_capacitance : 0.000726332;
      fall_capacitance : 0.000718385;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00074545;
      rise_capacitance : 0.00074545;
      fall_capacitance : 0.000737773;
    }
    pin (S0) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00154667;
      rise_capacitance : 0.00154667;
      fall_capacitance : 0.00152544;
    }
    pin (S1) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00147108;
      rise_capacitance : 0.00147108;
      fall_capacitance : 0.00144361;
    }
  }
  cell (MXB4M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((S1&((S0&D)|((!S0)&C)))|((!S1)&((S0&B)|((!S0)&A)))))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0129819;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b0 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b1 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&!C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&!C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&!C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&!C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&!B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&!B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&!C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&!C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000520545;
      rise_capacitance : 0.000520545;
      fall_capacitance : 0.000516481;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000742044;
      rise_capacitance : 0.000742044;
      fall_capacitance : 0.000730516;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000858251;
      rise_capacitance : 0.000858251;
      fall_capacitance : 0.000845764;
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000972942;
      rise_capacitance : 0.000972942;
      fall_capacitance : 0.000951211;
    }
    pin (S0) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00223292;
      rise_capacitance : 0.00223292;
      fall_capacitance : 0.00218735;
    }
    pin (S1) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00125825;
      rise_capacitance : 0.00125825;
      fall_capacitance : 0.0012343;
    }
  }
  cell (ND2B1M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)&B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0677332;
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00439501;
      rise_capacitance : 0.00439501;
      fall_capacitance : 0.00435526;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00160104;
      rise_capacitance : 0.00160104;
      fall_capacitance : 0.00156643;
    }
  }
  cell (ND2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A&B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0680967;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00385586;
      rise_capacitance : 0.00381486;
      fall_capacitance : 0.00385586;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00414253;
      rise_capacitance : 0.00414253;
      fall_capacitance : 0.0040253;
    }
  }
  cell (ND3B1M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)&B&C))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00207262;
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000408734;
      rise_capacitance : 0.000406236;
      fall_capacitance : 0.000408734;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000437926;
      rise_capacitance : 0.000437926;
      fall_capacitance : 0.000436797;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000511562;
      rise_capacitance : 0.000511562;
      fall_capacitance : 0.00050232;
    }
  }
  cell (ND3M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A&B&C))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0417644;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0031066;
      rise_capacitance : 0.00308468;
      fall_capacitance : 0.0031066;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00358464;
      rise_capacitance : 0.0035812;
      fall_capacitance : 0.00358464;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00369703;
      rise_capacitance : 0.00369703;
      fall_capacitance : 0.00366418;
    }
  }
  cell (ND4B1M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)&B&C&D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00314764;
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000412056;
      rise_capacitance : 0.000407108;
      fall_capacitance : 0.000412056;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000421071;
      rise_capacitance : 0.000415662;
      fall_capacitance : 0.000421071;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000452164;
      rise_capacitance : 0.000452164;
      fall_capacitance : 0.000449905;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00049069;
      rise_capacitance : 0.00049069;
      fall_capacitance : 0.000480134;
    }
  }
  cell (ND4B2M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)&(!NB)&C&D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00301678;
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NB";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000451469;
      rise_capacitance : 0.000445452;
      fall_capacitance : 0.000451469;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000537459;
      rise_capacitance : 0.000537459;
      fall_capacitance : 0.000536006;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000485797;
      rise_capacitance : 0.000485797;
      fall_capacitance : 0.00047718;
    }
    pin (NB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000463197;
      rise_capacitance : 0.000463197;
      fall_capacitance : 0.000456023;
    }
  }
  cell (ND4M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A&B&C&D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0012336;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000353358;
      rise_capacitance : 0.000350926;
      fall_capacitance : 0.000353358;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00036776;
      rise_capacitance : 0.00036418;
      fall_capacitance : 0.00036776;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000378417;
      rise_capacitance : 0.000374512;
      fall_capacitance : 0.000378417;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00037197;
      rise_capacitance : 0.00037197;
      fall_capacitance : 0.000371591;
    }
  }
  cell (NR2B1M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)|B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0446455;
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00369552;
      rise_capacitance : 0.00369552;
      fall_capacitance : 0.00355499;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00161397;
      rise_capacitance : 0.00161397;
      fall_capacitance : 0.00158156;
    }
  }
  cell (NR2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A|B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0442806;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00353456;
      rise_capacitance : 0.00348155;
      fall_capacitance : 0.00353456;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00333926;
      rise_capacitance : 0.00333926;
      fall_capacitance : 0.00319172;
    }
  }
  cell (NR3B1M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)|B|C))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00276107;
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000460397;
      rise_capacitance : 0.000460397;
      fall_capacitance : 0.000449911;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000452994;
      rise_capacitance : 0.000452994;
      fall_capacitance : 0.000441106;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000542279;
      rise_capacitance : 0.000542279;
      fall_capacitance : 0.00052957;
    }
  }
  cell (NR3M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A|B|C))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00205279;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000434339;
      rise_capacitance : 0.000434316;
      fall_capacitance : 0.000434339;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000474037;
      rise_capacitance : 0.000474037;
      fall_capacitance : 0.000463027;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000439915;
      rise_capacitance : 0.000439915;
      fall_capacitance : 0.000427358;
    }
  }
  cell (NR4B1M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)|B|C|D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00443478;
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000929858;
      rise_capacitance : 0.000929858;
      fall_capacitance : 0.000907704;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000882566;
      rise_capacitance : 0.000882566;
      fall_capacitance : 0.000861489;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00073944;
      rise_capacitance : 0.00073944;
      fall_capacitance : 0.000730299;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000565895;
      rise_capacitance : 0.000565895;
      fall_capacitance : 0.000555189;
    }
  }
  cell (NR4B2M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)|(!NB)|C|D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00443129;
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NB";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000873374;
      rise_capacitance : 0.000873374;
      fall_capacitance : 0.000851745;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000743417;
      rise_capacitance : 0.000743417;
      fall_capacitance : 0.000734233;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000553233;
      rise_capacitance : 0.000553233;
      fall_capacitance : 0.000542851;
    }
    pin (NB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000519082;
      rise_capacitance : 0.000519082;
      fall_capacitance : 0.000508649;
    }
  }
  cell (NR4M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A|B|C|D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0019196;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000484662;
      rise_capacitance : 0.000484055;
      fall_capacitance : 0.000484662;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000486203;
      rise_capacitance : 0.000486203;
      fall_capacitance : 0.000474626;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000452981;
      rise_capacitance : 0.000452981;
      fall_capacitance : 0.000441688;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000421476;
      rise_capacitance : 0.000421476;
      fall_capacitance : 0.000415208;
    }
  }
  cell (OA211M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2)&B&C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00608524;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000386077;
      rise_capacitance : 0.000384734;
      fall_capacitance : 0.000386077;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00037778;
      rise_capacitance : 0.00037778;
      fall_capacitance : 0.000375639;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000394595;
      rise_capacitance : 0.000394595;
      fall_capacitance : 0.000393442;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000411888;
      rise_capacitance : 0.000410105;
      fall_capacitance : 0.000411888;
    }
  }
  cell (OA21M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2)&B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.11577;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00170611;
      rise_capacitance : 0.00170611;
      fall_capacitance : 0.00168263;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00178162;
      rise_capacitance : 0.00175441;
      fall_capacitance : 0.00178162;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00156264;
      rise_capacitance : 0.00156264;
      fall_capacitance : 0.00150514;
    }
  }
  cell (OA221M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2)&(B1|B2)&C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0128606;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000406919;
      rise_capacitance : 0.000406919;
      fall_capacitance : 0.000403861;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000419269;
      rise_capacitance : 0.000417592;
      fall_capacitance : 0.000419269;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000393425;
      rise_capacitance : 0.000393425;
      fall_capacitance : 0.000391368;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000606669;
      rise_capacitance : 0.000606296;
      fall_capacitance : 0.000606669;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000491599;
      rise_capacitance : 0.000489966;
      fall_capacitance : 0.000491599;
    }
  }
  cell (OA222M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2)&(B1|B2)&(C1|C2))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0122239;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&!A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&!A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000417368;
      rise_capacitance : 0.000417368;
      fall_capacitance : 0.00041369;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000430631;
      rise_capacitance : 0.000427711;
      fall_capacitance : 0.000430631;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000428215;
      rise_capacitance : 0.00042757;
      fall_capacitance : 0.000428215;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000400212;
      rise_capacitance : 0.000400212;
      fall_capacitance : 0.000396212;
    }
    pin (C1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00039701;
      rise_capacitance : 0.00039701;
      fall_capacitance : 0.000393736;
    }
    pin (C2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00039273;
      rise_capacitance : 0.00039273;
      fall_capacitance : 0.000383222;
    }
  }
  cell (OA22M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2)&(B1|B2))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.107101;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00197014;
      rise_capacitance : 0.00193774;
      fall_capacitance : 0.00197014;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00185256;
      rise_capacitance : 0.00185256;
      fall_capacitance : 0.00181653;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00202277;
      rise_capacitance : 0.00202277;
      fall_capacitance : 0.00201536;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00190679;
      rise_capacitance : 0.00190679;
      fall_capacitance : 0.00183322;
    }
  }
  cell (OA31M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2|A3)&B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0121849;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000438444;
      rise_capacitance : 0.000437671;
      fall_capacitance : 0.000438444;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000385724;
      rise_capacitance : 0.000385724;
      fall_capacitance : 0.000380964;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000427786;
      rise_capacitance : 0.000427786;
      fall_capacitance : 0.000423467;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00055222;
      rise_capacitance : 0.00055222;
      fall_capacitance : 0.000537477;
    }
  }
  cell (OA32M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2|A3)&(B1|B2))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0127651;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000472876;
      rise_capacitance : 0.000472268;
      fall_capacitance : 0.000472876;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000493368;
      rise_capacitance : 0.000493368;
      fall_capacitance : 0.000485937;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000407709;
      rise_capacitance : 0.000407709;
      fall_capacitance : 0.000402355;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000436544;
      rise_capacitance : 0.000436544;
      fall_capacitance : 0.000429669;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000441715;
      rise_capacitance : 0.000441715;
      fall_capacitance : 0.000428414;
    }
  }
  cell (OA33M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2|A3)&(B1|B2|B3))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131998;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000460508;
      rise_capacitance : 0.000460088;
      fall_capacitance : 0.000460508;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000472893;
      rise_capacitance : 0.000472893;
      fall_capacitance : 0.000466665;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000491307;
      rise_capacitance : 0.000491307;
      fall_capacitance : 0.000485024;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000538505;
      rise_capacitance : 0.000538505;
      fall_capacitance : 0.000532696;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0004946;
      rise_capacitance : 0.0004946;
      fall_capacitance : 0.000483509;
    }
    pin (B3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000487991;
      rise_capacitance : 0.000487991;
      fall_capacitance : 0.000477207;
    }
  }
  cell (OAI21M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1|A2)&B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0422706;
      timing () {
        related_pin : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00355224;
      rise_capacitance : 0.00354748;
      fall_capacitance : 0.00355224;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0034764;
      rise_capacitance : 0.0034764;
      fall_capacitance : 0.00336515;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00364348;
      rise_capacitance : 0.00362142;
      fall_capacitance : 0.00364348;
    }
  }
  cell (OAI31M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1|A2|A3)&B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00288825;
      timing () {
        related_pin : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000491286;
      rise_capacitance : 0.000491286;
      fall_capacitance : 0.000490927;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000508616;
      rise_capacitance : 0.000508616;
      fall_capacitance : 0.000497343;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000505611;
      rise_capacitance : 0.000505611;
      fall_capacitance : 0.000497264;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000502481;
      rise_capacitance : 0.000502481;
      fall_capacitance : 0.000501055;
    }
  }
  cell (OAI32M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1|A2|A3)&(B1|B2)))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00169702;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000555678;
      rise_capacitance : 0.000553294;
      fall_capacitance : 0.000555678;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000524461;
      rise_capacitance : 0.000524461;
      fall_capacitance : 0.00051603;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000488689;
      rise_capacitance : 0.000488689;
      fall_capacitance : 0.00047932;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000546365;
      rise_capacitance : 0.000546365;
      fall_capacitance : 0.000541875;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000522246;
      rise_capacitance : 0.000522246;
      fall_capacitance : 0.000502056;
    }
  }
  cell (OAI33M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1|A2|A3)&(B1|B2|B3)))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00169534;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000506863;
      rise_capacitance : 0.000505648;
      fall_capacitance : 0.000506863;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000481033;
      rise_capacitance : 0.000481033;
      fall_capacitance : 0.000473638;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00044535;
      rise_capacitance : 0.00044535;
      fall_capacitance : 0.00043826;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000444875;
      rise_capacitance : 0.000444875;
      fall_capacitance : 0.000443791;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000472903;
      rise_capacitance : 0.000472903;
      fall_capacitance : 0.000459778;
    }
    pin (B3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000466665;
      rise_capacitance : 0.000466665;
      fall_capacitance : 0.000454499;
    }
  }
  cell (OR2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A|B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.112352;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00182922;
      rise_capacitance : 0.00180507;
      fall_capacitance : 0.00182922;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00173104;
      rise_capacitance : 0.00173104;
      fall_capacitance : 0.00166717;
    }
  }
  cell (OR3M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A|B|C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.112302;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00158106;
      rise_capacitance : 0.00156586;
      fall_capacitance : 0.00158106;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00128408;
      rise_capacitance : 0.00128408;
      fall_capacitance : 0.00125029;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00137309;
      rise_capacitance : 0.00137309;
      fall_capacitance : 0.00133343;
    }
  }
  cell (OR4M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A|B|C|D)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.103297;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00167377;
      rise_capacitance : 0.00166528;
      fall_capacitance : 0.00167377;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00132741;
      rise_capacitance : 0.00132741;
      fall_capacitance : 0.00129089;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00128422;
      rise_capacitance : 0.00128422;
      fall_capacitance : 0.00124735;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00138029;
      rise_capacitance : 0.00138029;
      fall_capacitance : 0.00136007;
    }
  }
  cell (OR6M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A|B|C|D|E|F)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00337482;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "E";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "F";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "E";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "F";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000446832;
      rise_capacitance : 0.000446832;
      fall_capacitance : 0.000433079;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000440832;
      rise_capacitance : 0.000440832;
      fall_capacitance : 0.000432886;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000395307;
      rise_capacitance : 0.000395307;
      fall_capacitance : 0.000393163;
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000391115;
      rise_capacitance : 0.000391115;
      fall_capacitance : 0.000380998;
    }
    pin (E) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00038989;
      rise_capacitance : 0.00038989;
      fall_capacitance : 0.000381653;
    }
    pin (F) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000442053;
      rise_capacitance : 0.000442053;
      fall_capacitance : 0.000434471;
    }
  }
  cell (SDFCQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.012542;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120762, 0.00193641, 0.00332815, 0.00549641, 0.00853872, 0.012542");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120762, 0.00193641, 0.00332815, 0.00549641, 0.00853872, 0.012542");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120762, 0.00193641, 0.00332815, 0.00549641, 0.00853872, 0.012542");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120762, 0.00193641, 0.00332815, 0.00549641, 0.00853872, 0.012542");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120762, 0.00193641, 0.00332815, 0.00549641, 0.00853872, 0.012542");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120762, 0.00193641, 0.00332815, 0.00549641, 0.00853872, 0.012542");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000657693;
      rise_capacitance : 0.000657693;
      fall_capacitance : 0.000639975;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000858624;
      rise_capacitance : 0.000858624;
      fall_capacitance : 0.000847728;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000355826;
      rise_capacitance : 0.000355826;
      fall_capacitance : 0.000354456;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0010136;
      rise_capacitance : 0.0010136;
      fall_capacitance : 0.000994768;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CKB) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clocked_on : "!CKB";
        next_state : "D";
      }
    }
  }
  cell (SDFCQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0126221;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000663113;
      rise_capacitance : 0.000663113;
      fall_capacitance : 0.000646285;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000832201;
      rise_capacitance : 0.000832201;
      fall_capacitance : 0.000823606;
    }
    pin (RB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00107432;
      rise_capacitance : 0.00107095;
      fall_capacitance : 0.00107432;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000353085;
      rise_capacitance : 0.000353085;
      fall_capacitance : 0.000351688;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000980301;
      rise_capacitance : 0.000980301;
      fall_capacitance : 0.00096233;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CKB) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (RB) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clear : "!RB";
        clocked_on : "!CKB";
        next_state : "D";
      }
    }
  }
  cell (SDFCQSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0128508;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000665311;
      rise_capacitance : 0.000665311;
      fall_capacitance : 0.000647981;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000843363;
      rise_capacitance : 0.000843363;
      fall_capacitance : 0.000833063;
    }
    pin (SB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00122091;
      rise_capacitance : 0.00120052;
      fall_capacitance : 0.00122091;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000353199;
      rise_capacitance : 0.000353199;
      fall_capacitance : 0.000351759;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0009805;
      rise_capacitance : 0.0009805;
      fall_capacitance : 0.000962553;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CKB) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (SB) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clocked_on : "!CKB";
        next_state : "D";
        preset : "!SB";
      }
    }
  }
  cell (SDFEQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0132161;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121975, 0.0019911, 0.00346412, 0.00575902, 0.00897902, 0.0132161");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121975, 0.0019911, 0.00346412, 0.00575902, 0.00897902, 0.0132161");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121975, 0.0019911, 0.00346412, 0.00575902, 0.00897902, 0.0132161");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121975, 0.0019911, 0.00346412, 0.00575902, 0.00897902, 0.0132161");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121975, 0.0019911, 0.00346412, 0.00575902, 0.00897902, 0.0132161");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121975, 0.0019911, 0.00346412, 0.00575902, 0.00897902, 0.0132161");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000565455;
      rise_capacitance : 0.000565455;
      fall_capacitance : 0.000551013;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00037237;
      rise_capacitance : 0.00037237;
      fall_capacitance : 0.000366086;
    }
    pin (E) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : load;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000978824;
      rise_capacitance : 0.000978824;
      fall_capacitance : 0.000953554;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000537537;
      rise_capacitance : 0.000537537;
      fall_capacitance : 0.000525631;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00108137;
      rise_capacitance : 0.00108137;
      fall_capacitance : 0.00106202;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((SE&SD)|((!SE)&((D&E)|(IQ&(!E)))))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CK) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (E) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clocked_on : "CK";
        next_state : "(D E) + (!E IQ)";
      }
    }
  }
  cell (SDFEQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0126722;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000647461;
      rise_capacitance : 0.000647461;
      fall_capacitance : 0.000630972;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000598704;
      rise_capacitance : 0.000598704;
      fall_capacitance : 0.000593853;
    }
    pin (E) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : load;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0013364;
      rise_capacitance : 0.0013364;
      fall_capacitance : 0.00131168;
    }
    pin (RB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00112305;
      rise_capacitance : 0.00112305;
      fall_capacitance : 0.00112276;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000333559;
      rise_capacitance : 0.000333559;
      fall_capacitance : 0.000332801;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0010283;
      rise_capacitance : 0.0010283;
      fall_capacitance : 0.00100412;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((SE&SD)|((!SE)&((D&E)|(IQ&(!E)))))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CK) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (E) {
        direction : input;
      }
      pin (RB) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clear : "!RB";
        clocked_on : "CK";
        next_state : "(D E) + (!E IQ)";
      }
    }
  }
  cell (SDFQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0129537;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121503, 0.00196982, 0.0034112, 0.00565679, 0.00880763, 0.0129537");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121503, 0.00196982, 0.0034112, 0.00565679, 0.00880763, 0.0129537");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121503, 0.00196982, 0.0034112, 0.00565679, 0.00880763, 0.0129537");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121503, 0.00196982, 0.0034112, 0.00565679, 0.00880763, 0.0129537");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121503, 0.00196982, 0.0034112, 0.00565679, 0.00880763, 0.0129537");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121503, 0.00196982, 0.0034112, 0.00565679, 0.00880763, 0.0129537");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000623106;
      rise_capacitance : 0.000623106;
      fall_capacitance : 0.000606899;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000851579;
      rise_capacitance : 0.000851579;
      fall_capacitance : 0.000839619;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000348912;
      rise_capacitance : 0.000348912;
      fall_capacitance : 0.000347374;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000986557;
      rise_capacitance : 0.000986557;
      fall_capacitance : 0.000968376;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CK) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clocked_on : "CK";
        next_state : "D";
      }
    }
  }
  cell (SDFQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.013141;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000664894;
      rise_capacitance : 0.000664894;
      fall_capacitance : 0.000648019;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000825722;
      rise_capacitance : 0.000825722;
      fall_capacitance : 0.000813529;
    }
    pin (RB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00110149;
      rise_capacitance : 0.00109702;
      fall_capacitance : 0.00110149;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000348129;
      rise_capacitance : 0.000348129;
      fall_capacitance : 0.000346415;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000977819;
      rise_capacitance : 0.000977819;
      fall_capacitance : 0.000959134;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CK) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (RB) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clear : "!RB";
        clocked_on : "CK";
        next_state : "D";
      }
    }
  }
  cell (SDFQRSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131992;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000664198;
      rise_capacitance : 0.000664198;
      fall_capacitance : 0.000646691;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000805691;
      rise_capacitance : 0.000805691;
      fall_capacitance : 0.000792806;
    }
    pin (RB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00117183;
      rise_capacitance : 0.00117183;
      fall_capacitance : 0.00116753;
    }
    pin (SB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00149296;
      rise_capacitance : 0.00147088;
      fall_capacitance : 0.00149296;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000349905;
      rise_capacitance : 0.000349905;
      fall_capacitance : 0.000348309;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000965386;
      rise_capacitance : 0.000965386;
      fall_capacitance : 0.000944017;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CK) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (RB) {
        direction : input;
      }
      pin (SB) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clear : "!RB";
        clear_preset_var1 : L;
        clear_preset_var2 : H;
        clocked_on : "CK";
        next_state : "D";
        preset : "!SB";
      }
    }
  }
  cell (SDFQSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0128179;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000662256;
      rise_capacitance : 0.000662256;
      fall_capacitance : 0.000644599;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000804708;
      rise_capacitance : 0.000804708;
      fall_capacitance : 0.000791259;
    }
    pin (SB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00121435;
      rise_capacitance : 0.0011961;
      fall_capacitance : 0.00121435;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000349325;
      rise_capacitance : 0.000349325;
      fall_capacitance : 0.000347588;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000974846;
      rise_capacitance : 0.000974846;
      fall_capacitance : 0.000956301;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CK) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (SB) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clocked_on : "CK";
        next_state : "D";
        preset : "!SB";
      }
    }
  }
  cell (XNR2M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A^B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0114799;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00109514;
      rise_capacitance : 0.00109514;
      fall_capacitance : 0.00107473;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000634402;
      rise_capacitance : 0.000634402;
      fall_capacitance : 0.000620763;
    }
  }
  cell (XNR3M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A^B^C))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0119205;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00066383;
      rise_capacitance : 0.00066383;
      fall_capacitance : 0.000650322;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0011385;
      rise_capacitance : 0.0011385;
      fall_capacitance : 0.00111021;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00113985;
      rise_capacitance : 0.00113985;
      fall_capacitance : 0.00111094;
    }
  }
  cell (XNR4M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A^B^C^D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0134135;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0011365;
      rise_capacitance : 0.0011365;
      fall_capacitance : 0.0011101;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00067856;
      rise_capacitance : 0.00067856;
      fall_capacitance : 0.000665248;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000656975;
      rise_capacitance : 0.000656975;
      fall_capacitance : 0.000642231;
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0011852;
      rise_capacitance : 0.0011852;
      fall_capacitance : 0.0011613;
    }
  }
  cell (XOR2M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A^B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0121806;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0011743;
      rise_capacitance : 0.0011743;
      fall_capacitance : 0.00114896;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000650825;
      rise_capacitance : 0.000650825;
      fall_capacitance : 0.000636327;
    }
  }
  cell (XOR3M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A^B^C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0130745;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000750023;
      rise_capacitance : 0.000750023;
      fall_capacitance : 0.000731495;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00119633;
      rise_capacitance : 0.00119633;
      fall_capacitance : 0.00116775;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00100641;
      rise_capacitance : 0.00100641;
      fall_capacitance : 0.00098679;
    }
  }
  cell (XOR4M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A^B^C^D)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0133628;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00113657;
      rise_capacitance : 0.00113657;
      fall_capacitance : 0.00110989;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000674451;
      rise_capacitance : 0.000674451;
      fall_capacitance : 0.000659884;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000613757;
      rise_capacitance : 0.000613757;
      fall_capacitance : 0.00059718;
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00118429;
      rise_capacitance : 0.00118429;
      fall_capacitance : 0.00115908;
    }
  }
}
